---
# This is the base hosts file needed to install the Fabric Prometheus monitoring system.
# The name of the sample rack is "samp"
all:
  hosts:
  children:
    head_node:
      hosts:
        # Add head node host names here, fqdn, localname or ips.
        # samp-hn must be mapped via an ssh config file
        # alternatively you can use the fqdn or ip.
        <samp-hn>: ##change##
          # Self signed certs are created for the node exporters. 
          cert_common_name: '{{site_acronym}}-hn.fabric-testbed.net'
          # Private ips are the same for all racks.
          node_exporter_web_listen_address: 10.1.1.10:9100
          
    worker_nodes:
      hosts:
        #Add hosts names here, fqdn, localnames or ips.
        # samp-wx must be mapped via an ssh config file
        # alternatively you can use the fqdn or ip.
        # For each node a self-signed cert will be created for the node exporters.
        # Private ips are the same for all racks.
        <samp-w1>: ##change##
          cert_common_name: '{{site_acronym}}-w1.fabric-testbed.net'
          node_exporter_web_listen_address: 10.1.1.11:9100
          
        <samp-w2>: ##change##
          cert_common_name: '{{site_acronym}}-w2.fabric-testbed.net'
          node_exporter_web_listen_address: 10.1.1.12:9100
          
        <samp-w3>: ##change##
          cert_common_name: '{{site_acronym}}-w3.fabric-testbed.net'
          node_exporter_web_listen_address: 10.1.1.13:9100
          

  vars:

    site_acronym: <samp>
    template_dir: templates

    ###############from rack system side###################
    rack_domain_name: '{{site_acronym}}-hn.fabric-testbed.net'

    # Head node public ip
    rack_public_ip: <152.54.15.11>
    # Head node private ip. Will be the same for all racks.
    rack_private_ip: 10.1.1.10

    # user not required just keys
    ceph_access_key: <ceph access key>
    ceph_secret_key: <ceph secret key>
    # for now there is only one endpoint
    ceph_endpoint: ceph-0.metrics.fabric-testbed.net

    # If you want to setup an admin user for grafana, set the password here.
    #grafana_admin_password: <ui_password_goes_here>
    #################end rack system side###################

    # Set usernames and passwords for node_exporter_basic_auth_users:
    # Suggested to use rackname: password
    # Note that ansible will use passlib bcrpyt to set the password into the node_Exporter config file.
    # The user & password will need to be set in the Prometheus scrape configs.
    node_exporter_basic_auth_users:
          #rackname: password
          <samp>: <password>
    # Repeat here for configuring the prometheus config file
    exporter_user: <samp>
    exporter_password: <password>


    # Set up the metrics to be exported.
    # Default is to add in all metrics except as noted below.
    node_exporter_enabled_collectors:
      #- wifi     # not on rack nodes
      #- tcpstat  # may have performance issues with high loads
      #- perf     # may cause high load, dependant on kernel configuration and settings
      #- devstat  # only on freebsd
      - buddyinfo
      - drbd
      - interrupts
      - ksmd
      - logind
      - meminfo_numa
      - mountstats
      - ntp
      - processes
      - qdisc
      - runit
      - supervisord
      - systemd

    # to make use of the textfile collector the directory must be set to a directory with write permissions enabled for node-exp
    # node_exporter_textfile_dir: "/var/lib/node_exporter"

    # Optionally disable some collectors
    # node_exporter_disabled_collectors: []



