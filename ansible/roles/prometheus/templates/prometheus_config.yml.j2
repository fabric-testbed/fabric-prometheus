
global:
  scrape_interval:     30s # Set the scrape interval to every ? seconds. Default is every 1 minute.
  evaluation_interval: 30s # Evaluate rules every ? seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      rack: '{{ hank_name }}'

# Alertmanager is not setup on local racks for now.
{# # Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets: ['localhost:9093']

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml" #}

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    #scrape_interval: 5s
    #scrape_timeout: 5s

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090']

  # Local Docker
  - job_name: 'docker'
    static_configs:
      - targets: ['docker-monitor_service:9417']

  # Rack Node Exporters 
  - job_name: 'node'
    scheme: https
    tls_config:
          insecure_skip_verify: true
    basic_auth:
          username: '{{node_exporter_username}}'
          password: '{{node_exporter_password}}'
    file_sd_configs:
      - files:
            - 'node_targets.yml'

  # PTP Server
  {# - job_name: 'timemachine'
    static_configs:
            - targets: ['{{ hank_name }}-time.fabric-testbed.net']
    metrics_path: /snmp
    params:
            module: ['TMI-COMMON-SHI']
    relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
            - target_label: __address__
              replacement: snmp-exporter_service:9116 #}

 # PTP Server Web UI
  - job_name: 'ptp_server_ui'
    metrics_path: /probe
    params:
         module: [http_401]
    static_configs:
         - targets:
                 - '{{ hank_name }}-time.fabric-testbed.net'

    relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
            - target_label: __address__
              replacement: blackbox-exporter_service:9115

  # Management Switch
  - job_name: 'mgt-sw' 
    static_configs:
            - targets: ['{{hostvars[hank_name + '-mgt-sw'].ansible_host}}']
    metrics_path: /snmp
    params:
            module: ['if_mib']
    relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
            - target_label: __address__
              replacement: snmp-exporter_service:9116

  # Dataplane Switch
  - job_name: 'data-sw'
    static_configs:
            - targets: ['{{hostvars[hank_name + '-data-sw'].ansible_host}}']
    metrics_path: /snmp
    params:
            module: ['if_mib']
    relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
            - target_label: __address__
              replacement: snmp-exporter_service:9116
