[server]
domain = {{ hostname }}
#root_url = https://%(domain)s
# version if using grafana as root 
root_url = https://%(domain)s/grafana

[auth.generic_oauth]
{% if grafana_oauth_client_id is defined %}
enabled = true
client_id = {{ grafana_oauth_client_id }}
client_secret = {{ grafana_oauth_client_secret }}
scopes = openid profile email org.cilogon.userinfo
auth_url = https://cilogon.org/authorize
token_url = https://cilogon.org/oauth2/token
api_url = https://cilogon.org/oauth2/userinfo

allow_sign_up = false
tls_skip_verify_insecure = true
tls_client_cert = /etc/grafana/certs/cert
tls_client_key = /etc/grafana/certs/key


# There is a pull request change at https://github.com/grafana/grafana/pull/28021 it will add the ability to not let users with a role log in.
# However it has been put on hold until version 8.0 is released. They are on 7.4 at the moment.
# can't deny a user any role.. the will always be a view! push request is in but has been blocked

#role_attribute_path = contains(project_roles[*], 'CO:COU:facility-operators:members:active') && 'Admin' || contains(profile[*], "CO:COU:metrics:members:active") && 'Admin' || 'Viewer'
# For now anyone who can get into the grafana should be able to edit. 
role_attribute_path = contains(project_roles[*], 'CO:COU:facility-operators:members:active') && 'Admin' || contains(profile[*], "CO:COU:metrics:members:active") && 'Admin' || 'Editor'

{% endif %}

# TODO enable for Global
[smptp]
#enabled = false
#host = mail.fabric-testbed.net:25
#from_address = alerts@metrics.<your rack>.fabric-testbed.net
#from_name = <your rack name> Grafana Alert
#user = <your email user>
#password = <your email password>

[log]
#level = debug
